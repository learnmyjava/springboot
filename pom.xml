<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>SpringBoot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpringBoot</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--SpringBoot 的核心启动器，包含了自动配置、日志、yaml -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<!-- <exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions> -->
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 支持全栈式web开发，包括Tomcat、spring-webmvc -->
		
		<!--用来热部署 and spring-boot-maven-plugin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- 导入支持JSP页面:javax.servlet-api、jstl、tomcat-embed-jaspe -->
		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency> -->
		
		
		<!--thymeleaf 模板引擎  -->
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
		
		 
		 
	   <dependency>
		<groupId>net.logstash.logback</groupId>
		<artifactId>logstash-logback-encoder</artifactId>
		<version>2.5</version>
	  </dependency>
		   	<dependency>
			    <groupId>com.alibaba</groupId>
			    <artifactId>fastjson</artifactId>
			    <version>1.2.56</version>
			</dependency>
		   
		<!-- mybatis依赖 -->
		<dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.2.0</version>
       	 </dependency>
       	<!-- oracle 依赖-->
       	<!-- 注意Oracle与ojdbc及jdk的版本匹配 -->
       <dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
		</dependency>
			

     
		   	<dependency>
			    <groupId>commons-httpclient</groupId>
			    <artifactId>commons-httpclient</artifactId>
			    <version>3.1</version>
			</dependency>
			
			<dependency>
	            <groupId>org.apache.httpcomponents</groupId>
	            <artifactId>httpclient</artifactId>
	            <version>4.3.5</version>
	            <exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
        	</dependency>
        	
        <dependency>
		    <groupId>jdom</groupId>
		    <artifactId>jdom</artifactId>
		    <version>1.0</version>
		</dependency>
	
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
		    <groupId>dom4j</groupId>
		    <artifactId>dom4j</artifactId>
		    <version>1.6.1</version>
		</dependency>
	
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>easyexcel</artifactId>
		    <version>1.0.1</version>
		</dependency>

		<!-- <dependency>
	       <groupId>org.slf4j</groupId>
	      <artifactId>slf4j-nop</artifactId>
	       <version>1.7.2</version>
	   </dependency> -->
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk15</classifier>
		</dependency>
	
		<dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.18</version>
        </dependency>
        
		<dependency>
		    <groupId>commons-net</groupId>
		    <artifactId>commons-net</artifactId>
		    <version>3.6</version>
		</dependency>
        
        <!-- prometheus +springboot监控 -->
        <!-- springboot2.X 中提供了actuactor 作为采集出口集exporter ,为prometheus 暴露采集端点 -->
         <dependency>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-starter-actuator</artifactId>
		  </dependency>

		 <dependency>
		        <groupId>io.micrometer</groupId>
		        <artifactId>micrometer-registry-prometheus</artifactId>
		 </dependency>
		 
        
        
        <!-- 开启缓存 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <!--  redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        
        <!-- redis集群 客户端使用jedis工具 -->
        <dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId>
		</dependency>
		        
		        
		<!-- 添加Swagger2依赖 ：构建restful API文档 -->
		
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.2.2</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.2.2</version>
		</dependency>
		<!-- com.jcraft.jsch 进行sfpt文件的下载 上传 -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.53</version>
		</dependency>
		
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.8</version>
		</dependency>
		<!-- JWT json web token start  -->
		 <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>3.5.0</version>
        </dependency>
		  <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.6.0</version>
        </dependency>
        <!-- JWT json web token end  -->
        
        <!-- 令牌桶 start -->
           <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>21.0</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>
        <!-- 令牌桶 end  -->
        
		</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</pluginRepository>
	</pluginRepositories>
        
	<build>	
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.github.core-lib</groupId>
				<artifactId>xjar-maven-plugin</artifactId>
				<version>4.0.1</version>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<password>cecgw@123</password>
							<!-- 源jar所在目录 -->
							<sourceDir>${project.build.directory}</sourceDir>
							<!-- 源jar名称 -->
							<sourceJar>dap-console.jar</sourceJar>
							<!-- 目标jar存放目录 -->
							<targetDir>${project.build.outputDirectory}</targetDir>
							<!-- 目标jar名称 -->
							<targetJar>console.jar</targetJar>
							<!--<excludes>
                                <exclude>/META-INF/resources/**/*</exclude>
                                <exclude>/assets/**/*</exclude>
                                <exclude>/images/**/*</exclude>
                                <exclude>/pages/**/*</exclude>
                                <exclude>/static/**/*</exclude>
                            </excludes>-->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
